swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: '1.0.0'
  title: Snowballing Web
  description: Use this documentation to know how to use all endpoints.

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
# The host (name or ip) serving the API
host: localhost:5000

# The base path on which the API is served, relative to the host. Will be prefixed to all paths. Used to control versioning
basePath: /

# The transfer protocol of the API
schemes:
  - http
# Format of bodies a client can send (Content-Type)
# consumes: [ 'text/plain', 'application/json', 'application/xml', 'text/bibtex' ]
consumes:
  - application/json
  - text/plain
# Format of the responses to the client (Accepts)
produces:
  - application/json

################################################################################
#                                    Paths                                     #
################################################################################
paths:
#------------------------------------------------------------------------------#
#                                  Citations                                   #
#------------------------------------------------------------------------------#

  /citations/:
    get:
      description: Use this endpoint to obtain all citations.
      responses:
        200:
          description: A JSON object with Citations.
          schema:
            $ref: '#/definitions/Citation'
  /citations/{work_id}/:
    post:
      description: Use this endpoint to create a new citation.
      parameters:
        - in: path
          name: work_id
          required: true
          description: The identity of the base work from which citations will be created.
          schema:
            type: string
            example: "pimentel2015b"
        - in: body
          name: body
          required: true
          schema:
            type: object
            example: {
              "backward": ["murta2014a"],
              "forward": ["ujcich2018c"]
            }
            properties:
              workref:
              backward:
                type: array
                description: A list of identities of works that the base work cites.
                items:
                  type: string
              forward:
                type: array
                description: A list of identities of works that cite base work.
                items:
                  type: string
      responses:
        200:
          description: A JSON object with the new citations.
          schema:
            $ref: '#/definitions/Citation'
    get:
      description: Use this endpoint to obtain a specific citations about a work.
      parameters:
        - in: path
          name: work_id
          required: true
          description: The identity of the base work from which citations will be created.
          schema:
            type: string
            example: "pimentel2015b"
      responses:
        200:
          description: A JSON object with citations.
          schema:
            $ref: '#/definitions/Citation'
#------------------------------------------------------------------------------#
#                                    Works                                     #
#------------------------------------------------------------------------------#
  /works/:
    get:
      description: Use this endpoint to obtain all works.
      responses:
        200:
          description: A JSON object with works.
          schema:
            type: array
            items:
              $ref: '#/definitions/Work'
    post:
      description: Use this endpoint to create a new work.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Work'
      responses:
        204:
          description: Such work was persisted.
  /works/{work_id}/:
    get:
      description: Use this endpoint to obtain a specific work.
      parameters:
        - in: path
          name: work_id
          required: true
          description: The identity of the base work from which citations will be created.
          schema:
            type: string
            example: "pimentel2015b"
      responses:
        200:
          description: A JSON object with work.
          schema:
            $ref: '#/definitions/Work'
  /works/validate/:
    post:
      parameters:
        - in: body
          name: body
          required: true
          description: Use this route to validate a json format
          schema:
            type: object
            example: [{
                      "ID": "ujcich2018provenance",
                      "_work_type": "Work",
                      "authors": "Ujcich, Benjamin E and Bates, Adam and Sanders, William H",
                      "display": "ujcich",
                      "entrytype": "inproceedings",
                      "name": "A provenance model for the European union general data protection regulation",
                      "organization": "Springer",
                      "place": "IPAW",
                      "place1": "International Provenance and Annotation Workshop",
                      "pp": "45--57",
                      "pyref": "ujcich2018a",
                      "year": 2018
                    },
                    {
                    "ID": "murta2014noworkflow",
                    "_work_type": "Work",
                    "authors": "Murta, Leonardo and Braganholo, Vanessa and Chirigati, Fernando and Koop, David and Freire, Juliana",
                    "display": "murta",
                    "entrytype": "inproceedings",
                    "name": "noWorkflow: capturing and analyzing provenance of scripts",
                    "organization": "Springer",
                    "pp": "71--83",
                    "pyref": "murta2014a",
                    "year": 2014
                    }]
      responses:
        204:
          description: All articles are valid.
        200:
          description: There are articles invalid.
          type: list
          items:
            type: object
            properties:
              article:
                type: object
              valid:
                type: boolean
              warnings:
                type: array
                items:
                  type: string
  /works/convert/:
    post:
      parameters:
        - in: body
          name: body
          required: true
          description: Use this route to convert bibtex to json
          consumes:
            - text/plain
          schema:
            type: string
            example: "@inproceedings{ujcich2018provenance,\n
                    \t title={A provenance model for the European union general data protection regulation},\n
                    \t author={Ujcich, Benjamin E and Bates, Adam and Sanders, William H},\n
                    \t booktitle={International Provenance and Annotation Workshop},\n
                    \t pages={45--57},\n
                    \t year={2018},\n
                    \t organization={Springer}\n
                    }\n
                    @inproceedings{murta2014noworkflow,\n
                    \t title={noWorkflow: capturing and analyzing provenance of scripts},\n
                    \t author={Murta, Leonardo and Braganholo, Vanessa and Chirigati, Fernando and Koop, David and Freire, Juliana},\n
                    \t booktitle={International Provenance and Annotation Workshop},\n
                    \t pages={71--83},\n
                    \t year={2014},\n
                    \t organization={Springer}\n
                    }"
      responses:
        200:
          description: A JSON object with work.
          schema:
            type: object
            properties:
              meta:
                type: object
                description: Metadata concerning such conversion.
                properties:
                  total:
                    type: integer
                  errors:
                    type: integer
                  incomplete:
                    type: array
                    items:
                      type: object
              data:
                description: A list of works in JSON format.
                type: array
                items:
                  type: object
################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Citation:
    name: citation
    type: object
    example: {
        "freire2008a": {
            "context": [
                null
            ],
            "ref": [
                "5"
            ],
            "work": [
                "murta2014a"
            ]
        },
    }
    properties:
      work_identification:
        type: object
        description: This object key should be the work identification (e.g., "freire2008a").
        properties:
          context:
            type: array
            description: The context of the n-th work.
            items:
              type: string
          ref:
            type: array
            description: The position in the work references section of the n-th work.
            items:
              type: string
          work:
            type: array
            description: The citations (where header forward is true) / cited list (where header forward is false) of the <work_identification.. (e.g. Where murta2014a cites freire2008a and header "forward" is true, it's expected "murta2014a" be included in this property value)
            items:
              type: string
  Work:
    name: work
    type: object
    example: {
        "aliases": [
            [
            2015,
            "noWorkflow: Capturing and Analyzing Provenance of Scripts",
            "Chirigati, Fernando and Koop, David and Freire, Juliana"
            ]
        ],
        "approach_name": "noWorkflow",
        "authors": "Murta, Leonardo and Braganholo, Vanessa and Chirigati, Fernando and Koop, David and Freire, Juliana",
        "category": "snowball",
        "citation_file": "murta2014a",
        "cluster_id": "5458343950729529273",
        "display": "no  Work  flow",
        "entrytype": "inproceedings",
        "file": "murta2014a.pdf",
        "local": "Cologne, Germany",
        "metakey": "murta2014a",
        "name": "noWorkflow: capturing and analyzing provenance of scripts",
        "organization": "Springer",
        "pp": "71--83",
        "scholar": "http://scholar.google.com/scholar?cites=5458343950729529273&as_sdt=2005&sciodt=0,5&hl=en",
        "scholar_id": "ucciVefuv0sJ",
        "scholar_ok": true,
        "tracking": "alert",
        "year": 2014
    }
    properties:
      ID:
        type: string
        required: false
      aliases:
        type: array
        required: false
        items:
          type: array
          items:
            type: string|integer
      approach_name:
        type: string
        required: false
      authors:
        type: string
        required: false
      category:
        type: string
        required: false
      citation_file:
        type: string
        required: false
      cluster_id:
        type: string
        required: false
      display:
        type: string
        required: false
      doi:
        type: string
        required: false
      due:
        type: string
        required: false
      entrytype:
        type: string
        required: false
      file:
        type: string
        required: false
      local:
        type: string
        required: false
      metakey:
        type: string
        required: false
      month:
        type: string
        required: false
      name:
        type: string
        required: false
      number:
      organization:
        type: string
        required: false
      pp:
        type: string
        required: false
      publisher:
        type: string
        required: false
      scholar:
        type: string
        required: false
      scholar_id:
        type: string
        required: false
      scholar_ok:
        type: boolean
        required: false
      star:
        type: string
        required: false
      tracking:
        type: string
        required: false
      volume:
        type: string
        required: false
      year:
        type: string
        required: false